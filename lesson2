<?php

//Реализация с абстрактным классом

abstract class item 
{	
    const CHARGES = 0.82;
	public $id;
    public $name;
    public $unitPrice;
    protected $unit;
    
    public function __construct($id, $name, $unitPrice) {
    	$this -> id = $id;
        $this -> name = $name;
        $this -> unitPrice = $unitPrice;
    }
    
    abstract public function getFinalPrice($quantity);
    abstract public function getRevenue($finalPrice);
    abstract public function printData($quantity);
}

class pieceItem extends item
{	
    protected $unit = 'pcs.';
    public function getFinalPrice($quantity) {
        $finalPrice=$quantity*$this -> unitPrice;
        return $finalPrice;
    }
    public function getRevenue($finalPrice) {
        return $finalPrice*self::CHARGES;
    }
    public function printData($quantity) {
        $finalPrice = $this -> getFinalPrice($quantity);
        $revenue = $this -> getRevenue($finalPrice);
    	echo 'Final price for ' . $quantity . ' ' . $this -> unit . ' of ' . $this -> name .  ' is ' . $finalPrice . ' euro<br>Revenue is ' . $revenue .'<br>';
    }
}

class digitalItem extends item
{
    public function getFinalPrice($quantity) {
        $finalPrice=$this -> unitPrice;
        return $finalPrice;
    }
    public function getRevenue($finalPrice) {
        return $finalPrice*self::CHARGES;
    }
    public function printData($quantity) {
        $finalPrice = $this -> getFinalPrice($quantity);
        $revenue = $this -> getRevenue($finalPrice);
    	echo 'Final price for ' . $quantity . ' ' . $this -> unit . ' of ' . $this -> name .  ' is ' . $finalPrice . ' euro<br>Revenue is ' . $revenue .'<br>';
    }
}

class itemByTheWeight extends pieceItem
{
	protected $unit = 'kg.';
}

$item1 = new pieceItem(1, 'item1', 33);
$item1 -> printData(3);





//Реализация без абстрактного класса

class item 
{	
    const CHARGES = 0.82;
	public $id;
    public $name;
    public $unitPrice;
    protected $unit;
    
    public function __construct($id, $name, $unitPrice) {
    	$this -> id = $id;
        $this -> name = $name;
        $this -> unitPrice = $unitPrice;
    }
    
    public function getFinalPrice($quantity) {
        $finalPrice=$quantity*$this -> unitPrice;
        return $finalPrice;
    }
    public function getRevenue($finalPrice) {
        return $finalPrice*self::CHARGES;
    }
    public function printData($quantity) {
        $finalPrice = $this -> getFinalPrice($quantity);
        $revenue = $this -> getRevenue($finalPrice);
    	echo 'Final price for ' . $quantity . ' ' . $this -> unit . ' of ' . $this -> name .  ' is ' . $finalPrice . ' euro<br>Revenue is ' . $revenue .'<br>';
    }
}

class pieceItem extends item
{	
    protected $unit = 'pcs.';
}

class digitalItem extends item
{
    public function getFinalPrice($quantity) {
        $finalPrice=$this -> unitPrice;
        return $finalPrice;
    }
}

class itemByTheWeight extends pieceItem
{
	protected $unit = 'kg.';
}

$item1 = new pieceItem(1, 'item1', 33);
$item1 -> printData(3);
?>
