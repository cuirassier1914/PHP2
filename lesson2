<?php
abstract class item 
{
	public $id;
    public $name;
    public $unitPrice;
    protected $unit;
    
    public function __construct($id, $name, $unitPrice) {
    	$this -> id = $id;
        $this -> name = $name;
        $this -> unitPrice = $unitPrice;
    }
    
    abstract public function getFinalPrice($quantity);
}

class pieceItem extends item
{	
    protected $unit = 'pcs.';
    public function getFinalPrice($quantity) {
        $finalPrice=$quantity*$this -> unitPrice;
        $revenue=$finalPrice-($finalPrice/100)*18;
        
        echo 'Final price for ' . $quantity . ' ' . $this -> unit . ' of ' . $this -> name .  ' is ' . $finalPrice . ' euro<br>Revenue is ' . $revenue .'<br>';
        return [$finalPrice, $revenue];
    }
}

class digitalItem extends item
{
    public function getFinalPrice($quantity) {
        $finalPrice=$this -> unitPrice;
        $revenue=$finalPrice-($finalPrice/100)*18;
        echo 'Final price for' . $this -> name . ' is ' . $this -> unitPrice . ' euro<br>Revenue is ' . $revenue .'<br>';
        return [$finalPrice, $revenue];
    }
}

class itemByTheWeight extends pieceItem
{
	protected $unit = 'kg.';
}

$item1 = new pieceItem(1, 'item1', 33);
$item1 -> getFinalPrice(2);

$item2 = new digitalItem(2, 'item2', 15);
$item2 -> getFinalPrice(1);

$item3 = new itemByTheWeight(2, 'item3', 5);
$item3 -> getFinalPrice(0.5);
    
?>
